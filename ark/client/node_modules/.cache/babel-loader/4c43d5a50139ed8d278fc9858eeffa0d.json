{"ast":null,"code":"var _jsxFileName = \"E:\\\\Uni\\\\Ark_Software\\\\ark\\\\client\\\\src\\\\components\\\\featureCard.js\";\nimport React from \"react\";\nimport \"./featureCard.css\";\nimport { Link } from 'react-router-dom';\n/*Card which is used to display popular pages */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction FeatureCard(props) {\n  /*Not sure if this is the best way but this will cast the passed attribute to allow it to be used in the to pathing for link */\n  const path = props.path + \"\";\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      to: path,\n      className: \"boss-card-feature\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"picture-wrap-feature\",\n        \"data-category\": props.tag,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: props.src\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_c = FeatureCard;\nexport default FeatureCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"FeatureCard\");","map":{"version":3,"names":["React","Link","FeatureCard","props","path","tag","src","name"],"sources":["E:/Uni/Ark_Software/ark/client/src/components/featureCard.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./featureCard.css\"\r\nimport { Link } from 'react-router-dom';\r\n\r\n/*Card which is used to display popular pages */\r\nfunction FeatureCard(props) {\r\n\r\n    /*Not sure if this is the best way but this will cast the passed attribute to allow it to be used in the to pathing for link */\r\n    const path = props.path + \"\";\r\n    return (\r\n        <>\r\n            <Link to={path} className=\"boss-card-feature\">\r\n                <div className=\"picture-wrap-feature\" data-category={props.tag}>\r\n                    <img src={props.src} />\r\n                </div>\r\n                <h1>{props.name}</h1>\r\n            </Link>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default FeatureCard"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA;;;;;AACA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;EAExB;EACA,MAAMC,IAAI,GAAGD,KAAK,CAACC,IAAN,GAAa,EAA1B;EACA,oBACI;IAAA,uBACI,QAAC,IAAD;MAAM,EAAE,EAAEA,IAAV;MAAgB,SAAS,EAAC,mBAA1B;MAAA,wBACI;QAAK,SAAS,EAAC,sBAAf;QAAsC,iBAAeD,KAAK,CAACE,GAA3D;QAAA,uBACI;UAAK,GAAG,EAAEF,KAAK,CAACG;QAAhB;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QADJ,eAII;QAAA,UAAKH,KAAK,CAACI;MAAX;QAAA;QAAA;QAAA;MAAA,QAJJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ,iBADJ;AAUH;;KAdQL,W;AAgBT,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}