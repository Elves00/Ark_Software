{"ast":null,"code":"var _jsxFileName = \"E:\\\\Uni\\\\Ark_Software\\\\ark\\\\client\\\\src\\\\components\\\\front-page\\\\homeCard.js\";\nimport React from \"react\";\nimport { Link } from 'react-router-dom';\n/*Card which is used to display popular pages */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Card(props) {\n  /*Not sure if this is the best way but this will cast the passed attribute to allow it to be used in the to pathing for link */\n  const path = props.path + \"/demon-beast-canyon\";\n  console.log(path);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      to: path,\n      className: \"boss-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"picture-wrap\",\n        \"data-category\": props.tag,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: props.src,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"h1\",\n        children: props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","Link","Card","props","path","console","log","tag","src","name"],"sources":["E:/Uni/Ark_Software/ark/client/src/components/front-page/homeCard.js"],"sourcesContent":["import React from \"react\";\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\n/*Card which is used to display popular pages */\r\nfunction Card(props) {\r\n\r\n    /*Not sure if this is the best way but this will cast the passed attribute to allow it to be used in the to pathing for link */\r\n    const path = props.path + \"/demon-beast-canyon\";\r\n    console.log(path)\r\n    return (\r\n        <>\r\n            <Link to={path} className=\"boss-card\">\r\n                <div className=\"picture-wrap\" data-category={props.tag}>\r\n                    <img src={props.src} alt=\"\"/>\r\n                </div>\r\n                <h1 className=\"h1\">{props.name}</h1>\r\n            </Link>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Card"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,IAAT,QAAqB,kBAArB;AAEA;;;;;AACA,SAASC,IAAT,CAAcC,KAAd,EAAqB;EAEjB;EACA,MAAMC,IAAI,GAAGD,KAAK,CAACC,IAAN,GAAa,qBAA1B;EACAC,OAAO,CAACC,GAAR,CAAYF,IAAZ;EACA,oBACI;IAAA,uBACI,QAAC,IAAD;MAAM,EAAE,EAAEA,IAAV;MAAgB,SAAS,EAAC,WAA1B;MAAA,wBACI;QAAK,SAAS,EAAC,cAAf;QAA8B,iBAAeD,KAAK,CAACI,GAAnD;QAAA,uBACI;UAAK,GAAG,EAAEJ,KAAK,CAACK,GAAhB;UAAqB,GAAG,EAAC;QAAzB;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QADJ,eAII;QAAI,SAAS,EAAC,IAAd;QAAA,UAAoBL,KAAK,CAACM;MAA1B;QAAA;QAAA;QAAA;MAAA,QAJJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ,iBADJ;AAUH;;KAfQP,I;AAiBT,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}