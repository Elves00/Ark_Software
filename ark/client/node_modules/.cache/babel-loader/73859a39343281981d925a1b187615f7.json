{"ast":null,"code":"var _jsxFileName = \"E:\\\\Uni\\\\Ark_Software\\\\ark\\\\client\\\\src\\\\components\\\\createUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreateUser() {\n  _s();\n\n  const [form, setForm] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\"\n  });\n  const navigate = useNavigate(); // These methods will update the state properties.\n\n  function updateForm(value) {\n    return setForm(prev => {\n      return { ...prev,\n        ...value\n      };\n    });\n  } // This function will handle the submission.\n\n\n  async function onSubmit(e) {\n    e.preventDefault(); // When a post request is sent to the create url, we'll add a new record to the database.\n\n    const newPerson = { ...form\n    };\n    await fetch(\"http://localhost:5000/record/addUser\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newPerson)\n    }).catch(error => {\n      window.alert(error);\n      return;\n    });\n    setForm({\n      name: \"\",\n      email: \"\",\n      password: \"\"\n    });\n    navigate(\"/\");\n  } // This following section will display the form that takes the input from the user.\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"name\",\n          value: form.name,\n          onChange: e => updateForm({\n            name: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"email\",\n          value: form.email,\n          onChange: e => updateForm({\n            email: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"password\",\n          value: form.password,\n          onChange: e => updateForm({\n            password: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Create Account\",\n          className: \"btn btn-primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CreateUser, \"zlPCP9uT1G9Q/I+x63unW41wEzw=\", false, function () {\n  return [useNavigate];\n});\n\n_c = CreateUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateUser\");","map":{"version":3,"names":["React","useState","useNavigate","CreateUser","form","setForm","name","email","password","navigate","updateForm","value","prev","onSubmit","e","preventDefault","newPerson","fetch","method","headers","body","JSON","stringify","catch","error","window","alert","target"],"sources":["E:/Uni/Ark_Software/ark/client/src/components/createUser.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\n\r\nexport default function CreateUser() {\r\n    const [form, setForm] = useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n    });\r\n    const navigate = useNavigate();\r\n\r\n    // These methods will update the state properties.\r\n    function updateForm(value) {\r\n        return setForm((prev) => {\r\n            return { ...prev, ...value };\r\n        });\r\n    }\r\n\r\n    // This function will handle the submission.\r\n    async function onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        // When a post request is sent to the create url, we'll add a new record to the database.\r\n        const newPerson = { ...form };\r\n\r\n        await fetch(\"http://localhost:5000/record/addUser\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(newPerson),\r\n        })\r\n            .catch(error => {\r\n                window.alert(error);\r\n                return;\r\n            });\r\n\r\n        setForm({ name: \"\", email: \"\", password: \"\" });\r\n        navigate(\"/\");\r\n    }\r\n\r\n    // This following section will display the form that takes the input from the user.\r\n    return (\r\n        <div>\r\n            {/*Label*/}\r\n            <h3>Create Account</h3>\r\n            \r\n            {/*form are a class for make entry forms etc*/}\r\n            <form onSubmit={onSubmit}>\r\n                {/*A unique div for each text field this one handles name */}\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    {/*A text box with a class and id */}\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"name\"\r\n                        value={form.name}\r\n                        onChange={(e) => updateForm({ name: e.target.value })}\r\n                    />\r\n                </div>\r\n                {/*A unique div for each text field this one handles email */}\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"email\"\r\n                        value={form.email}\r\n                        onChange={(e) => updateForm({ email: e.target.value })}\r\n                    />\r\n                </div>\r\n\r\n                {/*A unique div for each text field this one handles password */}\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    {/*A text box with a class and id */}\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"password\"\r\n                        value={form.password}\r\n                        onChange={(e) => updateForm({ password: e.target.value })}\r\n                    />\r\n                </div>\r\n\r\n                {/*handles person creation */}\r\n                <div className=\"form-group\">\r\n                    {/*Input type is submit which handles form submision type events*/}\r\n                    <input\r\n                        type=\"submit\"\r\n                        value=\"Create Account\"\r\n                        className=\"btn btn-primary\"\r\n                    />\r\n                </div>\r\n\r\n            </form>\r\n            \r\n\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}